// Source: http://yara.readthedocs.org/en/v3.4.0/writingrules.html#conditions
private rule ft_strict_exe
{
  condition:
     // MZ signature at offset 0 and ...
     uint16(0) == 0x5A4D and
     // ... PE signature at offset stored in MZ header at 0x3C
     uint32(uint32(0x3C)) == 0x00004550
}

/*
Example target...
00000000  4D 5A 90 00  03 00 00 00   04 00 00 00  FF FF 00 00   MZ..............
00000010  B8 00 00 00  00 00 00 00   40 00 00 00  00 00 00 00   ........@.......
00000020  00 00 00 00  00 00 00 00   00 00 00 00  00 00 00 00   ................
00000030  00 00 00 00  00 00 00 00   00 00 00 00  00 01 00 00   ................
00000040  BA 10 00 0E  1F B4 09 CD   21 B8 01 4C  CD 21 90 90   ........!..L.!..
00000050  54 68 69 73  20 70 72 6F   67 72 61 6D  20 6D 75 73   This program mus
00000060  74 20 62 65  20 72 75 6E   20 75 6E 64  65 72 20 57   t be run under W
00000070  69 6E 33 32  0D 0A 24 37   00 00 00 00  00 00 00 00   in32..$7........
00000080  00 00 00 00  00 00 00 00   00 00 00 00  00 00 00 00   ................
00000090  00 00 00 00  00 00 00 00   00 00 00 00  00 00 00 00   ................
000000A0  00 00 00 00  00 00 00 00   00 00 00 00  00 00 00 00   ................
000000B0  00 00 00 00  00 00 00 00   00 00 00 00  00 00 00 00   ................
000000C0  00 00 00 00  00 00 00 00   00 00 00 00  00 00 00 00   ................
000000D0  00 00 00 00  00 00 00 00   00 00 00 00  00 00 00 00   ................
000000E0  00 00 00 00  00 00 00 00   00 00 00 00  00 00 00 00   ................
000000F0  00 00 00 00  00 00 00 00   00 00 00 00  00 00 00 00   ................
00000100  50 45 00 00  64 86 01 00   19 5E 42 2A  00 00 00 00   PE..d....^B*....
--or--
00000000  4D 5A 90 00  03 00 00 00   04 00 00 00  FF FF 00 00   MZ..............
00000010  B8 00 00 00  00 00 00 00   40 00 00 00  00 00 00 00   ........@.......
00000020  00 00 00 00  00 00 00 00   00 00 00 00  00 00 00 00   ................
00000030  00 00 00 00  00 00 00 00   00 00 00 00  D0 00 00 00   ................
00000040  0E 1F BA 0E  00 B4 09 CD   21 B8 01 4C  CD 21 54 68   ........!..L.!Th
00000050  69 73 20 70  72 6F 67 72   61 6D 20 63  61 6E 6E 6F   is program canno
00000060  74 20 62 65  20 72 75 6E   20 69 6E 20  44 4F 53 20   t be run in DOS
00000070  6D 6F 64 65  2E 0D 0D 0A   24 00 00 00  00 00 00 00   mode....$.......
00000080  5D 98 EA 43  19 F9 84 10   19 F9 84 10  19 F9 84 10   ]..C............
00000090  19 F9 85 10  4B F9 84 10   DA F6 D9 10  16 F9 84 10   ....K...........
000000A0  7A DB AE 10  18 F9 84 10   19 F9 84 10  18 F9 84 10   z...............
000000B0  52 69 63 68  19 F9 84 10   00 00 00 00  00 00 00 00   Rich............
000000C0  00 00 00 00  00 00 00 00   00 00 00 00  00 00 00 00   ................
000000D0  50 45 00 00  4C 01 02 00   34 44 5D 5A  00 00 00 00   PE..L...4D]Z....
*/

rule sig_Win32_Mode_exec : suspicious
{
    meta:
        author = "Todd Fencl"
        created = "28-Nov-2018"
        modified = "28-Nov-2018"
        description = "Detect if file requires execution under Win32 heaader between MZ and PE boundries"

    strings:
        $winmode = "This program must be run under Win32"

    condition:
        // (0 .. (uint32(0x3C))) = between end of MZ and start of PE headers
        // 0x3C = e_lfanew = offset of PE header
        ft_strict_exe and $winmode in (0x3C .. (uint32(0x3C)))
}

rule sig_DOS_Mode_exec : suspicious
{
    meta:
        author = "Todd Fencl"
        created = "28-Nov-2018"
        modified = "28-Nov-2018"
        description = "Detect if file requires execution under DOS heaader between MZ and PE boundries"

    strings:
        $dosmode = "This program cannot be run in DOS mode"

    condition:
        // (0 .. (uint32(0x3C))) = between end of MZ and start of PE headers
        // 0x3C = e_lfanew = offset of PE header
        ft_strict_exe and $dosmode in (0x3C .. (uint32(0x3C)))
}

